# To configure this workflow:
#
# 1. Configure environment variables
# GitHub sets default environment variables for every workflow run.
# Replace the variables relative to your project in the "env" section below.


name: Publish packages to MyGet dev feed

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: src\Stratis.DevEx.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: your-test-project-path                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Execute all unit tests in the solution
    # - name: Execute unit tests
    #  run: dotnet test

    # Restore the solution
    - name: Restore the application
      run: dotnet restore "$env:Solution_Name"  /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        
    # Build the Stratis.CodeAnalysis.Cs project
    - name: Build the solution
      run: dotnet build "src\Stratis.CodeAnalysis.Cs\Stratis.CodeAnalysis.Cs.Package\Stratis.CodeAnalysis.Cs.Package.csproj" /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        
    # Pack Stratis.CodeAnalysis.Cs package
    - name: Pack Stratis.CodeAnalysis.Cs
      run: dotnet pack "src\Stratis.CodeAnalysis.Cs\Stratis.CodeAnalysis.Cs.Package\Stratis.CodeAnalysis.Cs.Package.csproj" --configuration Debug /p:Version=${VERSION} --no-build --output .
    
    #- name: Push Stratis.CodeAnalysis.Cs
    #  run: dotnet nuget push NuGet.Workflow.${VERSION}.nupkg --source https://nuget.pkg.github.com/acraven/index.json --api-key ${GITHUB_TOKEN}
    #  env:
    #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
